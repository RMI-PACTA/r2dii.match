
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "r2dii.analysis"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('r2dii.analysis')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("join_abcd_scenario")
> ### * join_abcd_scenario
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: join_abcd_scenario
> ### Title: Join a data-loanbook object to the abcd and scenario
> ### Aliases: join_abcd_scenario
> 
> ### ** Examples
> 
> installed <- requireNamespace("r2dii.data", quietly = TRUE) &&
+   requireNamespace("r2dii.match", versionCheck = "0.1.0", quietly = TRUE) &&
+   packageVersion("r2dii.match") >= "0.1.0"
> 
> if (installed) {
+   library(r2dii.data)
+   library(r2dii.match)
+ 
+   valid_matches <- match_name(loanbook_demo, abcd_demo) %>%
+     # WARNING: Remember to validate matches (see `?prioritize`)
+     prioritize()
+ 
+   valid_matches %>%
+     join_abcd_scenario(
+       abcd = abcd_demo,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo
+     )
+ }
> 
> 
> 
> cleanEx()
> nameEx("join_ald_scenario")
> ### * join_ald_scenario
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: join_ald_scenario
> ### Title: Join a data-loanbook object to the ald and scenario
> ### Aliases: join_ald_scenario
> ### Keywords: internal
> 
> ### ** Examples
> 
> installed <- requireNamespace("r2dii.data", quietly = TRUE) &&
+   requireNamespace("r2dii.match", quietly = TRUE) &&
+   packageVersion("r2dii.match") >= "0.1.0"
> 
> if (installed) {
+   library(r2dii.data)
+   library(r2dii.match)
+ 
+   valid_matches <- match_name(loanbook_demo, ald_demo) %>%
+     prioritize()
+ 
+   valid_matches %>%
+     join_ald_scenario(
+       ald = ald_demo,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo
+     )
+ 
+    # ->
+ 
+   valid_matches %>%
+     join_abcd_scenario(
+       abcd = abcd_demo,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo
+     )
+ }
> 
> 
> 
> cleanEx()
> nameEx("summarize_weighted_production")
> ### * summarize_weighted_production
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summarize_weighted_production
> ### Title: Summaries based on the weight of each loan per sector per year
> ### Aliases: summarize_weighted_production
> ###   summarize_weighted_percent_change
> 
> ### ** Examples
> 
> installed <- requireNamespace("r2dii.data", quietly = TRUE) &&
+   requireNamespace("r2dii.match", quietly = TRUE) &&
+   packageVersion("r2dii.match") >= "0.1.0"
> 
> if (installed) {
+   library(r2dii.data)
+   library(r2dii.match)
+ 
+   loanbook <- head(loanbook_demo, 150)
+   abcd <- head(abcd_demo, 100)
+   master <- loanbook %>%
+     match_name(abcd) %>%
+     prioritize() %>%
+     join_abcd_scenario(
+       abcd = abcd,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo
+     )
+ 
+   summarize_weighted_production(master)
+ 
+   summarize_weighted_production(master, use_credit_limit = TRUE)
+ 
+   summarize_weighted_percent_change(master)
+ 
+   summarize_weighted_percent_change(master, use_credit_limit = TRUE)
+ }
> 
> 
> 
> cleanEx()
> nameEx("target_market_share")
> ### * target_market_share
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: target_market_share
> ### Title: Add targets for production, using the market share approach
> ### Aliases: target_market_share
> 
> ### ** Examples
> 
> installed <- requireNamespace("r2dii.data", quietly = TRUE) &&
+   requireNamespace("r2dii.match", quietly = TRUE) &&
+   packageVersion("r2dii.match") >= "0.1.0"
> 
> if (installed) {
+   library(r2dii.data)
+   library(r2dii.match)
+ 
+   loanbook <- head(loanbook_demo, 100)
+   abcd <- head(abcd_demo, 100)
+ 
+   matched <- loanbook %>%
+     match_name(abcd) %>%
+     prioritize()
+ 
+   # Calculate targets at portfolio level
+   matched %>%
+     target_market_share(
+       abcd = abcd,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo
+     )
+ 
+   # Calculate targets at company level
+   matched %>%
+     target_market_share(
+       abcd = abcd,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo,
+       by_company = TRUE
+     )
+ 
+   matched %>%
+     target_market_share(
+       abcd = abcd,
+       scenario = scenario_demo_2020,
+       region_isos = region_isos_demo,
+       # Calculate unweighted targets
+       weight_production = FALSE
+     )
+ }
> 
> 
> 
> cleanEx()
> nameEx("target_sda")
> ### * target_sda
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: target_sda
> ### Title: Add targets for CO2 emissions per unit production at the
> ###   portfolio level, using the SDA approach
> ### Aliases: target_sda
> 
> ### ** Examples
> 
> installed <- requireNamespace("r2dii.match", quietly = TRUE) &&
+   requireNamespace("r2dii.data", quietly = TRUE) &&
+   packageVersion("r2dii.match") >= "0.1.0"
> 
> if (installed) {
+   library(r2dii.match)
+   library(r2dii.data)
+ 
+   loanbook <- head(loanbook_demo, 150)
+   abcd <- head(abcd_demo, 100)
+ 
+   matched <- loanbook %>%
+     match_name(abcd) %>%
+     prioritize()
+ 
+   # Calculate targets at portfolio level
+   matched %>%
+     target_sda(
+       abcd = abcd,
+       co2_intensity_scenario = co2_intensity_scenario_demo,
+       region_isos = region_isos_demo
+     )
+ 
+   # Calculate targets at company level
+   matched %>%
+     target_sda(
+       abcd = abcd,
+       co2_intensity_scenario = co2_intensity_scenario_demo,
+       region_isos = region_isos_demo,
+       by_company = TRUE
+     )
+ }
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.375 0.021 0.566 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
